{"ast":null,"code":"var _jsxFileName = \"/home/alex/projects/test_ts_app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchUser } from './moks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [pending, setPending] = useState(true);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    fetchUser('0').then(response => setUser(response), () => setUser(null));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user ? user : 'Loading...'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n\n_s(App, \"tQYyuMlKhSWAfojAKnSuRMrXm0o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/alex/projects/test_ts_app/src/App.tsx"],"names":["React","useEffect","useState","fetchUser","App","pending","setPending","user","setUser","then","response"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,QAA1B;;;AAEA,MAAMC,GAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,SAAS,CAAC,GAAD,CAAT,CAAeM,IAAf,CACGC,QAAD,IAAmBF,OAAO,CAACE,QAAD,CAD5B,EAEE,MAAMF,OAAO,CAAC,IAAD,CAFf;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBAAO;AAAA,cAAMD,IAAI,GAAGA,IAAH,GAAU;AAApB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAZD;;GAAMH,G;;KAAAA,G;AAcN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { fetchUser } from './moks'\n\nconst App: React.FC<any> = () => {\n  const [pending, setPending] = useState(true)\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    fetchUser('0').then(\n      (response: any) => setUser(response),\n      () => setUser(null),\n    )\n  }, [])\n\n  return <div>{user ? user : 'Loading...'}</div>\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}